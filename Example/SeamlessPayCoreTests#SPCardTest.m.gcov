        -:    0:Source:SeamlessPayCoreTests/SPCardTest.m
        -:    0:Graph:/Users/sb/Library/Developer/Xcode/DerivedData/SeamlessPayCore-hhzsuewgtnajsudfmilhnmvjpivn/Build/Intermediates.noindex/SeamlessPayCore.build/Debug-iphonesimulator/SeamlessPayCoreTests.build/Objects-normal/x86_64/SPCardTest.gcno
        -:    0:Data:/Users/sb/Library/Developer/Xcode/DerivedData/SeamlessPayCore-hhzsuewgtnajsudfmilhnmvjpivn/Build/Intermediates.noindex/SeamlessPayCore.build/Debug-iphonesimulator/SeamlessPayCoreTests.build/Objects-normal/x86_64/SPCardTest.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2://  SPCardTest.m
        -:    3://  SeamlessPayCoreTests
        -:    4://
        -:    5:
        -:    6:
        -:    7:#import <XCTest/XCTest.h>
        -:    8:
        -:    9:#import "../../SeamlessPayCore/Classes/SPCardBrand.h"
        -:   10:#import "../../SeamlessPayCore/Classes/SPCard.h"
        -:   11:
        -:   12:@interface SPCard ()
        -:   13:
        -:   14:@property (nonatomic, assign, readwrite) SPCardBrand brand;
        -:   15:
        -:   16:- (void)setLast4:(NSString *)last4;
        -:   17:- (void)setAllResponseFields:(NSDictionary *)allResponseFields;
        -:   18:
        -:   19:@end
        -:   20:
        -:   21:@interface SPCardTest : XCTestCase
        -:   22:
        -:   23:@end
        -:   24:
        -:   25:@implementation SPCardTest
        -:   26:
        3:   27:- (void)setUp {
        -:   28:    // Put setup code here. This method is called before the invocation of each test method in the class.
        3:   29:}
        -:   30:
        3:   31:- (void)tearDown {
        -:   32:    // Put teardown code here. This method is called after the invocation of each test method in the class.
        3:   33:}
        -:   34:
        1:   35:- (void)testBrandFromString {
        1:   36:    XCTAssertEqual([SPCard brandFromString:@"visa"], SPCardBrandVisa);
        1:   37:    XCTAssertEqual([SPCard brandFromString:@"VISA"], SPCardBrandVisa);
        -:   38:
        1:   39:    XCTAssertEqual([SPCard brandFromString:@"american express"], SPCardBrandAmex);
        1:   40:    XCTAssertEqual([SPCard brandFromString:@"AMERICAN EXPRESS"], SPCardBrandAmex);
        -:   41:
        1:   42:    XCTAssertEqual([SPCard brandFromString:@"mastercard"], SPCardBrandMasterCard);
        1:   43:    XCTAssertEqual([SPCard brandFromString:@"MASTERCARD"], SPCardBrandMasterCard);
        -:   44:
        1:   45:    XCTAssertEqual([SPCard brandFromString:@"discover"], SPCardBrandDiscover);
        1:   46:    XCTAssertEqual([SPCard brandFromString:@"DISCOVER"], SPCardBrandDiscover);
        -:   47:
        1:   48:    XCTAssertEqual([SPCard brandFromString:@"jcb"], SPCardBrandJCB);
        1:   49:    XCTAssertEqual([SPCard brandFromString:@"JCB"], SPCardBrandJCB);
        -:   50:
        1:   51:    XCTAssertEqual([SPCard brandFromString:@"diners club"], SPCardBrandDinersClub);
        1:   52:    XCTAssertEqual([SPCard brandFromString:@"DINERS CLUB"], SPCardBrandDinersClub);
        -:   53:
        1:   54:    XCTAssertEqual([SPCard brandFromString:@"unionpay"], SPCardBrandUnionPay);
        1:   55:    XCTAssertEqual([SPCard brandFromString:@"UNIONPAY"], SPCardBrandUnionPay);
        -:   56:
        1:   57:    XCTAssertEqual([SPCard brandFromString:@"unknown"], SPCardBrandUnknown);
        1:   58:    XCTAssertEqual([SPCard brandFromString:@"UNKNOWN"], SPCardBrandUnknown);
        -:   59:    
        1:   60:    XCTAssertEqual([SPCard brandFromString:@"garbage"], SPCardBrandUnknown);
        1:   61:    XCTAssertEqual([SPCard brandFromString:@"GARBAGE"], SPCardBrandUnknown);
        1:   62:}
        -:   63:
        1:   64:- (void)testFundingFromString {
        1:   65:    XCTAssertEqual([SPCard fundingFromString:@"credit"], SPCardFundingTypeCredit);
        1:   66:    XCTAssertEqual([SPCard fundingFromString:@"CREDIT"], SPCardFundingTypeCredit);
        -:   67:
        1:   68:    XCTAssertEqual([SPCard fundingFromString:@"debit"], SPCardFundingTypeDebit);
        1:   69:    XCTAssertEqual([SPCard fundingFromString:@"DEBIT"], SPCardFundingTypeDebit);
        -:   70:
        1:   71:    XCTAssertEqual([SPCard fundingFromString:@"prepaid"], SPCardFundingTypePrepaid);
        1:   72:    XCTAssertEqual([SPCard fundingFromString:@"PREPAID"], SPCardFundingTypePrepaid);
        -:   73:
        1:   74:    XCTAssertEqual([SPCard fundingFromString:@"other"], SPCardFundingTypeOther);
        1:   75:    XCTAssertEqual([SPCard fundingFromString:@"OTHER"], SPCardFundingTypeOther);
        -:   76:
        1:   77:    XCTAssertEqual([SPCard fundingFromString:@"unknown"], SPCardFundingTypeOther);
        1:   78:    XCTAssertEqual([SPCard fundingFromString:@"UNKNOWN"], SPCardFundingTypeOther);
        -:   79:
        1:   80:    XCTAssertEqual([SPCard fundingFromString:@"garbage"], SPCardFundingTypeOther);
        1:   81:    XCTAssertEqual([SPCard fundingFromString:@"GARBAGE"], SPCardFundingTypeOther);
        1:   82:}
        -:   83:
        1:   84:- (void)testStringFromFunding {
        5:   85:    NSArray<NSNumber *> *values = @[
        1:   86:                                    @(SPCardFundingTypeCredit),
        1:   87:                                    @(SPCardFundingTypeDebit),
        1:   88:                                    @(SPCardFundingTypePrepaid),
        1:   89:                                    @(SPCardFundingTypeOther),
        -:   90:                                    ];
        -:   91:
        4:   92:    for (NSNumber *fundingNumber in values) {
        4:   93:        SPCardFundingType funding = (SPCardFundingType)[fundingNumber integerValue];
        4:   94:        NSString *string = [SPCard stringFromFunding:funding];
        -:   95:
        4:   96:        switch (funding) {
        -:   97:            case SPCardFundingTypeCredit:
        1:   98:                XCTAssertEqualObjects(string, @"credit");
        2:   99:                break;
        -:  100:            case SPCardFundingTypeDebit:
        1:  101:                XCTAssertEqualObjects(string, @"debit");
        2:  102:                break;
        -:  103:            case SPCardFundingTypePrepaid:
        1:  104:                XCTAssertEqualObjects(string, @"prepaid");
        2:  105:                break;
        -:  106:            case SPCardFundingTypeOther:
        1:  107:                XCTAssertNil(string);
        1:  108:                break;
        4:  109:        }
        4:  110:    }
        1:  111:}
        -:  112:
        -:  113:
        -:  114:
        -:  115:
        -:  116:@end
